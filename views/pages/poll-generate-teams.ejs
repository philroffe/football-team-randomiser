<!DOCTYPE html>
<html lang="en">
<head>
  <%- include ("../partials/header.ejs") %>

  <style>
  .linkborder, .emailHeader {
    background-color: #D5EDF6;
    color: #333333;
    padding: 2px 6px 2px 6px;
    border-top: 1px solid #D5EDF6;
    border-right: 1px solid #333333;
    border-bottom: 1px solid #333333;
    border-left: 1px solid #D5EDF6;
  }
  </style>
</head>

<body class="w3-light-grey">
  <%- include ("../partials/nav.ejs") %>

  <!-- Page content -->
  <div class="w3-content" style="max-width:2000px;margin-top:46px;margin-left: 10px;">
    <!-- Divs content is autogenerated from javascript -->
    <h3>Team Randomiser</h3>
    <div id="pollLink">Not Yet Available</div>
    <div id="optionDates">Not Yet Available</div><br>

    <div style="display: flex;">
      <div id="chooseOption" style="display:inline;">
        Email Template:
        <select name="emailChoice" id="emailChoice" checked onchange="changeOption(this.value)">
          <option value="teams">Teams</option>
          <option value="availability">Availability</option>
          <option value="payments">Payments</option>
        </select>
      </div>

      <div id="chooseOptionAlgorithm" style="display:inline;margin-left:10px;">
        Order By:
        <select name="algorithmChoice" id="algorithmChoice" checked onchange="changeAlgorithm(this.value)">
          <option value="algorithm0">Random</option>
          <option value="algorithm1">Win Ratio</option>
          <option value="algorithm2">Win+Draw Ratio</option>
          <option value="algorithm3">Avg Score Per Game</option>
          <option value="algorithm4">Total Score Per Game</option>
          <option value="algorithm5">Most Played</option>
        </select>
        <button class="linkborder" onclick=";changeAlgorithm('algorithm0')" id="randomiseAgain">Randomise Players Again!</button>
      </div>
    </div>
      

      <input type="text" id="emailTitle" style="width:100%;font-size: 90%;" data-lpignore=true>
      <br>
    <div style="width:100%;display:flex;">
      <div id="emailEntryDiv" style="display:inline;width:55%"><textarea id="emailBody" rows="30" style="width:95%;font-size: 90%;margin-top:10px" >Not Yet Available</textarea></div>
      <div id="paymentsEntryDiv" style="display:inline;width:44%;font-size: 80%;"></div>
    </div> 
    <br>

    <div id="sendEmailDiv">
      <input type="checkbox" id="sendTestEmailList" name="sendTestEmailList" value="Test" style="background: #eee;" onclick="updateEmailButton();"><label for="sendTestEmailList">Send Test Email?</label>
      <p>
      <button id="sendEmail" style="background-color: #90EE90;float:left;" type="button" onclick="sendEmail();">Send Email to ALL players</button>
      <div style="float:left;margin-left:20px;padding:5px;">... Or Manual Email Creation:</div>
        <div class="linkborder" style="float:left;" id="emailLinkMobile">Not Yet Available</div>
        <div class="linkborder" style="float:left;" id="emailLinkDesktop">Not Yet Available</div>
    </div>
  </div>

  <script>
  <%- include ("./generate-teams-utils.js") %>
  var nextMondayText = "<%= pageData.nextMonday %>";
  var nextMondayDate = new Date(nextMondayText);
  //var todayDate = new Date();
  var todayDate = nextMondayDate;
  var pollLink = "https://tensile-spirit-360708.nw.r.appspot.com/poll";
  var optionDates = "";
  var pollDate = "";
  var monthDateFormat = new Intl.DateTimeFormat('en', { month: 'short' });
  var monthDateLongFormat = new Intl.DateTimeFormat('en', { month: 'long' });
  var monthDateNumericFormat = new Intl.DateTimeFormat('en', { month: '2-digit' });
  var dayDateFormat = new Intl.DateTimeFormat('en', { day: '2-digit' });

  var playerNameSuggestions, allAttendanceData, outstandingPayments;
  //var playersList = [];

  var algorithmTitle = { "algorithm0": "Everyone Randomly Weighted", 
                         "algorithm1": "Win Ratio (W|D|L)", 
                         "algorithm2": "Win+Draw ratio (W|D|L)",
                         "algorithm3": "Average generated score per game\n(5 for win, 3 for draw, 1 for loss,\n 0 for not-played)", 
                         "algorithm4": "Total generated score per game\n(5 for win, 3 for draw, 1 for loss,\n 0 for not-played)",
                         "algorithm5": "Most Played (W|D|L)"}

    // annoying workaround to some mumbo-jumbo to convert a valid object client-side ()
    var pagedata =  JSON.parse("<%= JSON.stringify(pageData) %>".replace(/&#34;/g, '"').replace(/&lt;/g, '<').replace(/&gt;/g, '>'));
    //console.log('Data=', pagedata);

    var players = pagedata.data.players;
    if (!players) { players = {}; }
    var gameMonth = pagedata.data.gameMonth;
    if (!gameMonth) gameMonth = monthDateNumericFormat.format(todayDate);
    var gameYear = pagedata.data.gameYear;
    if (!gameYear) gameYear = todayDate.getFullYear();
    allAttendanceData = pagedata.data.allAttendanceData;
    if (!allAttendanceData) { allAttendanceData = {}; }
    outstandingPayments = pagedata.data.outstandingPayments;
    if (!outstandingPayments) { outstandingPayments = {}; }

    pollDate = new Date("01 " + monthDateFormat.format(todayDate) + " " + gameYear);
    //console.log(pollDate);
    var gameMonthString = monthDateFormat.format(todayDate);

    //console.log("allAttendanceData=", allAttendanceData);
    //console.log("outstandingPayments=", outstandingPayments);

    // collate the aliases
    var playerAliasMaps = pagedata.data.playerAliasMaps;
    var playerToAliasMap = playerAliasMaps["playerToAliasMap"];
    var aliasToPlayerMap = playerAliasMaps["aliasToPlayerMap"];
    playerNameSuggestions = Array.from(Object.keys(playerToAliasMap));
    // define some test email addresses
    var testEmailList = [ "Phil RT1 <philroffe+test1@gmail.com>", "Phil RT2 <philroffe+test2@gmail.com>"];
    // update Send Email button to show the number of people on the mailiing list
    document.getElementById("sendEmail").innerHTML = "Send Email to " + Object.keys(playerAliasMaps.activeEmailList).length + " players";

    var user = pagedata.user;
    if (user) {
      document.getElementById("authHeaderSmall").innerHTML = user.given_name + " (logout)";
      document.getElementById("authHeaderSmall").href = "/logout";
      document.getElementById("authHeaderLarge").innerHTML = user.given_name + " (logout)";
      document.getElementById("authHeaderLarge").href = "/logout";
      console.log("Logged in User:", user);
      document.getElementById("sendEmailDiv").style.visibility = "visible";
    } else {
      document.getElementById("sendEmailDiv").style.visibility = "hidden";
    }

    function mondaysInMonth(m,y) {
      var days = new Date(y,m,0).getDate();
      var mondays =  new Date(m +'/01/'+ y).getDay();
      if (mondays != 1){
        mondays = 9 - mondays;
      }
      mondays = [mondays];
      //console.log(mondays);
      for (var i = mondays[0] + 7; i <= days; i += 7) {
        mondays.push(i);
      }
      return mondays;
    }

    mondaysDates = mondaysInMonth(pollDate.getMonth()+1, pollDate.getFullYear());  //=> [ 7,14,21,28 ]
    var nextMondayOptionIndex = getNextMondayIndex(mondaysDates, nextMondayDate);
    console.log("mondaysDates:", mondaysDates, nextMondayOptionIndex);


    var optionDates = "Dates";
    Object.keys(mondaysDates).forEach(function(key) {
      // Generate the text for the options (with next Monday in bold)
      optionDate = new Date(mondaysDates[key] + " " + monthDateFormat.format(nextMondayDate) + " " + nextMondayDate.getFullYear());
      optionDateText = dayDateFormat.format(optionDate) + " " + monthDateFormat.format(optionDate);
      if (datesAreOnSameDay(optionDate, nextMondayDate)) {
        optionDates += " : <b><u>" + optionDateText + " </u></b>"
      } else {
        optionDates += " : " + optionDateText
      }
    });

  function updateDivText() {
      //Update div text values
      document.getElementById("pollLink").innerHTML="Generated from: <a href='" + pollLink + "'>" + monthDateLongFormat.format(pollDate) + "</a>"
      document.getElementById("optionDates").innerHTML = optionDates
      document.getElementById("emailTitle").value = fullEmailSubject
      document.getElementById("emailBody").value = fullEmailText
      // generate email link
      emailTo = "footie"
      emailBodyUrlEnc = encodeURI(fullEmailText)
      emailLinkHTML = "<a href=\"http://mail.google.com/mail/u/?authuser=philroffe@gmail.com&view=cm&fs=1&tf=1" + 
        "&to=" + emailTo + 
        "&su=" + fullEmailSubject +
        "&body=" + emailBodyUrlEnc +
        "\" target=\"_blank\">Gmail Webmail</a>" 
        document.getElementById("emailLinkDesktop").innerHTML = emailLinkHTML

        emailLinkHTML = "<a href=\"mailto:" + emailTo + "?subject=" + fullEmailSubject + "&body=" + emailBodyUrlEnc + "\">Mobile</a>" 
        document.getElementById("emailLinkMobile").innerHTML = emailLinkHTML
  }

  function changeAlgorithm(algorithmType) {
    // calculate updated URL
    var newURL = window.location.href;
    if (window.location.href.includes("algorithm=")) {
      newURL = window.location.href.replace(/(algorithm=)\w+/g, 'algorithm=' + algorithmType.at(-1));
    } else {
      (window.location.href.includes("?")) ? newURL += "&" : newURL += "?";
      newURL += "algorithm=" + algorithmType.at(-1);
    }
    // update the URL (without refreshing) to reflect tab change
    window.history.pushState({}, 'unused', newURL);

    // display the right div
    document.getElementById("paymentsEntryDiv").innerHTML = algorithmType;

    if (algorithmType == "algorithm0") {
      document.getElementById("randomiseAgain").style.display = "block";
    } else {
      document.getElementById("randomiseAgain").style.display = "none";
    }

    // change the algorithm for all players and regenerate teams
    var playersGamesPlayedRatio = changeAlgorithmForPlayers(algorithmType, players, allAttendanceData, aliasToPlayerMap, nextMondayOptionIndex);

    // get the generated variables returned as playersGamesPlayedRatio
    var totalPossibleGames = playersGamesPlayedRatio.totalPossibleGames;
    var sortedPlayers = playersGamesPlayedRatio.sortedPlayers;
    var standbyPlayers = playersGamesPlayedRatio.standbyPlayers;
    var generatedTeams = playersGamesPlayedRatio.generatedTeams;
    var redPlayers = shuffle(generatedTeams.redPlayers);
    var bluePlayers = shuffle(generatedTeams.bluePlayers);

    // print the list for viewing
    var playerStringList = "";
    for (var i = 0; i < sortedPlayers.length; i++) {
      playerName = sortedPlayers[i][0];
      playerNameClean = playerName.replace(/&#39;/g, "'");
      playerAlgorithmScore = Number(sortedPlayers[i][1][algorithmType + "ratio"]).toFixed(2);

      var cssStyle = "";
      if (redPlayers.includes(playerName)) {
        cssStyle = "font-weight:bold;color:white;background-color:red";
      } else if (bluePlayers.includes(playerName)) {
        cssStyle = "font-weight:bold;color:white;background-color:blue";
      } else if (standbyPlayers.includes(playerName)) {
        cssStyle = "font-weight:bold;color:white;background-color:gold";
      }
      var wonLostDrawnString = "(" + playersGamesPlayedRatio[playerName].won + "|" + playersGamesPlayedRatio[playerName].drawn + "|" + playersGamesPlayedRatio[playerName].lost + ")"
      wonLostDrawnString = wonLostDrawnString.padEnd(10);

      playerStringList += "<div style='" + cssStyle + "'>" + playerAlgorithmScore.padEnd(5) + " " + wonLostDrawnString  + playerNameClean + "\n</div>";

    }
    document.getElementById("paymentsEntryDiv").innerHTML = '<pre>' + algorithmTitle[algorithmType] 
      + '\n(Total No of Games: ' + totalPossibleGames + ')\n\n'
      + playerStringList + '</pre>';

    generateTeamsEmailText(generatedTeams, nextMondayDate);
    updateDivText();

    return playersGamesPlayedRatio;
  }

  function changeOption(emailChoice) {
    //console.log("email choice:", emailChoice)
    if (emailChoice == "teams") {
      document.getElementById("chooseOptionAlgorithm").style.display = "block";
      changeAlgorithm(document.getElementById("algorithmChoice").value);
      //console.log("AAA", document.getElementById("algorithmChoice").value)
      //updateDivText();
    } else if (emailChoice == "availability") {
      document.getElementById("chooseOptionAlgorithm").style.display = "none"
      generateAvailabilityEmailText();
    } else if (emailChoice == "payments") {
      document.getElementById("chooseOptionAlgorithm").style.display = "none"
      generatePaymentsEmailText();
    }
  }

  function generateAvailabilityEmailText() {
    document.getElementById("paymentsEntryDiv").innerHTML = '<p>';
    addPaymentsTableRows(outstandingPayments, true);

    var dateText = monthDateLongFormat.format(nextMondayDate) + " " + nextMondayDate.getFullYear();
    var emailSubject = "Availability for " + dateText + " [Footie, Goodwin, 6pm Mondays]"
    var emailBody = "Hi all,\n\nA new month so a new poll.  You know what to do...\n"
    emailBody += "https://tensile-spirit-360708.nw.r.appspot.com/poll"
    emailBody += "\n\nAlso, outstanding payments for games over the last couple of months when you get a sec please...\n"
    emailBody += "***PAYMENTS WILL GO HERE - DO NOT DELETE THIS LINE***";
    emailBody += "\n\nCheers,\nPhil\n"
    emailBody += "\nMobile: 07960951917\n"
    emailBody += "https://tensile-spirit-360708.nw.r.appspot.com/poll\n"
    document.getElementById("emailTitle").value = emailSubject;
    document.getElementById("emailBody").value = emailBody;
    document.getElementById("emailTitle").style.width = "100%";
    document.getElementById("emailBody").style.width = "100%";
  }

  function generatePaymentsEmailText() {
    document.getElementById("paymentsEntryDiv").innerHTML = '<p>';
    addPaymentsTableRows(outstandingPayments, true);

    var emailSubject = "Payments for Monday Footie Please [Footie, Goodwin, 6pm Mondays]"
    var emailBody = "Hi all,\n\nOutstanding payments for games over the last few months when you get a sec please...\n\n"
    emailBody += "***PAYMENTS WILL GO HERE - DO NOT DELETE THIS LINE***";
    emailBody += "\n\nCheers,\nPhil\n"
    emailBody += "\nMobile: 07960951917\n"
    emailBody += "https://tensile-spirit-360708.nw.r.appspot.com/poll\n"
    document.getElementById("emailTitle").value = emailSubject;
    document.getElementById("emailBody").value = emailBody;
    document.getElementById("emailTitle").style.width = "100%";
    document.getElementById("emailBody").style.width = "100%";

    //document.getElementById("emailBody").value = document.getElementById("paymentsEntryDiv").innerText;
  }

  function updateEmailButton() {
    // check if sending real or test emails
    if (document.getElementById("sendTestEmailList").checked) {
      document.getElementById("sendEmail").innerText = "Send Email to Test list"
    } else {
      document.getElementById("sendEmail").innerHTML = "Send Email to " + Object.keys(playerAliasMaps.activeEmailList).length + " players";
    }
  }

  function sendEmail() {
    var emailTo = [];
    // check if sending real or test emails
    if (document.getElementById("sendTestEmailList").checked) {
      // test so create a dummy array
      emailTo = testEmailList;
    } else {
      // real email list so get array from the values of activeEmailList
      emailTo = Object.values(playerAliasMaps.activeEmailList);
      if (!confirm('This will send an email to everyone on the mailing list.\nAre you sure?')) return;
    }

    var emailSubject = document.getElementById("emailTitle").value;
    var emailBody = document.getElementById("emailBody").value;
    emailBody = emailBody.replaceAll("\n", '<br>');
    emailBody = emailBody.replace("***PAYMENTS WILL GO HERE - DO NOT DELETE THIS LINE***", document.getElementById("paymentsEntryDiv").innerHTML);
    var emailDetails = { 'emailSubject': emailSubject, 'emailBody': emailBody, 'emailTo': emailTo };
    // now send the POST request with the data
    console.log(emailDetails)

    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        console.log("Saved response", this.responseText);
        //location.reload(true);
        document.getElementById("sendEmail").innerHTML = "EMAIL SENT!";
        document.getElementById("sendEmail").disabled = true;
        document.getElementById("emailTitle").disabled = true;
        document.getElementById("emailBody").disabled = true;
        document.getElementById("randomiseAgain").style.visibility = "hidden";
      }
    };
    xmlhttp.open("POST", "/send-email");
    xmlhttp.setRequestHeader("Content-Type", "application/json");
    xmlhttp.send(JSON.stringify(emailDetails));
  }

  // auto select the
  var algorithmIndex = new URL(document.location.href).searchParams.get("algorithm");
  var selectAlgorithm = (algorithmIndex && algorithmIndex <= document.getElementById("algorithmChoice").length) ? algorithmIndex : 3;
  document.getElementById("algorithmChoice").selectedIndex = selectAlgorithm;
  document.getElementById('algorithmChoice').dispatchEvent(new Event('change'));
  
  </script>
  <%- include ("./admin-payments.ejs") %>

  </body>
</html>
