
  <script type="text/javascript">
    var playerAliasMap = pagedata.playerAliasMap;

    var playersAliasHeader = document.getElementById("playersAliasHeader")
    var playerCount = 0;
    var collapsedPlayerList = {};
    Object.keys(playerAliasMap).sort().forEach(function(key) {
      //console.log("key", playerAliasMap[key]);
      var playerName = key;
      var playerActive = playerAliasMap[key].active;
      var aliasesList = playerAliasMap[key].aliases;
      addAliasPlayer(playerName, playerActive, aliasesList);
      
      collapsedPlayerList[playerName.toUpperCase()] = playerName;
      for (var i = 0; i < aliasesList.length; i ++) {
        collapsedPlayerList[aliasesList[i].toUpperCase()] = playerName;
      }
    });

    function addAliasPlayer(playerName, playerActive, aliasesList) {
      if (!playerName) {
        playerName = "";
        playerActive = true;
        aliasesList = [];
      }
      //console.log("ADDING PLAYERS:", playerName, playerActive, aliasesList);

      // create Player Name field
      var newPlayerName = document.createElement("input"); 
      newPlayerName.setAttribute("type", "text"); 
      newPlayerName.style.verticalAlign = "top";
      newPlayerName.setAttribute("id", "player" + playerCount + "Alias"); 
      newPlayerName.setAttribute("name", "myPlayers[]"); 
      newPlayerName.value = playerName; 

      // create active player checkbox
      var newPlayerActive = document.createElement("input");
      newPlayerActive.setAttribute("type", "checkbox");  
      newPlayerActive.style.verticalAlign = "top";
      newPlayerActive.setAttribute("id", "playerActive" + playerCount + "Alias"); 
      newPlayerActive.setAttribute("name", "myActivePlayers[]"); 
      newPlayerActive.checked = playerActive;
      newPlayerActive.style.width = "25px";
      newPlayerActive.style.height = "27px";
      newPlayerActive.style.margin = "1px 5px 0px 0px";


      // create text area for the aliases
      var newPlayerAliases = document.createElement("textarea"); 
      newPlayerAliases.setAttribute("type", "textarea"); 
      newPlayerAliases.setAttribute("id", "playerAlias" + playerCount + "Alias"); 
      newPlayerAliases.setAttribute("name", "myPlayerAliases[]"); 
      var newPlayerAliasesText = "";
      for (var i = 0; i < aliasesList.length; i ++) {
        newPlayerAliasesText += aliasesList[i];
        newPlayerAliasesText += "\n";
      }
      newPlayerAliases.value = newPlayerAliasesText; 

      var header = playersAliasHeader;
      if (!playerActive) {
        header = inactivePlayersHeader;
      }
      header.appendChild(newPlayerActive);
      header.appendChild(newPlayerName);
      header.appendChild(newPlayerAliases);
      header.appendChild(document.createElement("br"));

      playerCount++;

      if (playerName == "") {
        // new player so enable the save/cancel button, and disable
        document.getElementById("cancelAliasEdit").disabled = false; 
        document.getElementById("cancelAliasEdit").style.backgroundColor = "lightsalmon";
      }
    }


    function savePlayerAliases(playerName, aliasesList) {
      var playerAliasMap = {};
      for (var i = 0; i < playerCount; i ++) {
        var player = document.getElementById("player" + i + "Alias").value;
        var isActive = document.getElementById("playerActive" + i + "Alias").checked;
        var aliases = document.getElementById("playerAlias" + i + "Alias").value;
        var aliasesArray = aliases.trim().split('\n');
        playerAliasMap[player] = { "active": isActive, "aliases": aliasesArray };
      }
      console.log("SAVING ALIASES:" + JSON.stringify(playerAliasMap));

      var postData = { "playerAliasMap": playerAliasMap };

      // now send the POST request with the data
      var xmlhttp = new XMLHttpRequest();
      xmlhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
          console.log("Saved response", this.responseText);
          location.reload(true);
        }
      };
      xmlhttp.open("POST", "/admin-save-aliases");
      xmlhttp.setRequestHeader("Content-Type", "application/json");
      xmlhttp.send(JSON.stringify(postData));
    }

  </script>